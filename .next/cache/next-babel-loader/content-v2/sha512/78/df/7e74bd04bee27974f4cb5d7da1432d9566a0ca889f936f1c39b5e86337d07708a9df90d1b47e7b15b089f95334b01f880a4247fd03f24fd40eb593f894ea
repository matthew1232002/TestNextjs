{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Lazarev/WebstormProjects/Test task/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"C:/Users/Lazarev/WebstormProjects/Test task/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:/Users/Lazarev/WebstormProjects/Test task/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar FIREBASE_DOMAIN = 'https://react-2faef-default-rtdb.firebaseio.com/';\nexport function getAllPosts() {\n  return _getAllPosts.apply(this, arguments);\n}\n\nfunction _getAllPosts() {\n  _getAllPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response, data, transformedQuotes, key, quoteObj;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(FIREBASE_DOMAIN, \"/posts.json\"));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n            transformedQuotes = [];\n\n            for (key in data) {\n              quoteObj = _objectSpread({\n                id: key\n              }, data[key]);\n              transformedQuotes.push(quoteObj);\n            }\n\n            return _context.abrupt(\"return\", transformedQuotes);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getAllPosts.apply(this, arguments);\n}\n\nexport function getSinglePost(_x) {\n  return _getSinglePost.apply(this, arguments);\n}\n\nfunction _getSinglePost() {\n  _getSinglePost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(postId) {\n    var response, data, loadedQuote;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"\".concat(FIREBASE_DOMAIN, \"/posts/\").concat(postId, \".json\"));\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context2.sent;\n            loadedQuote = _objectSpread({\n              id: postId\n            }, data);\n            return _context2.abrupt(\"return\", loadedQuote);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getSinglePost.apply(this, arguments);\n}\n\nexport function addQuote(_x2) {\n  return _addQuote.apply(this, arguments);\n}\n\nfunction _addQuote() {\n  _addQuote = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(quoteData) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"\".concat(FIREBASE_DOMAIN, \"/posts.json\"), {\n              method: 'POST',\n              body: JSON.stringify(quoteData),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 2:\n            return _context3.abrupt(\"return\", null);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _addQuote.apply(this, arguments);\n}\n\nexport function addComment(_x3) {\n  return _addComment.apply(this, arguments);\n}\n\nfunction _addComment() {\n  _addComment = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(requestData) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetch(\"\".concat(FIREBASE_DOMAIN, \"/comments/\").concat(requestData.postId, \".json\"), {\n              method: 'POST',\n              body: JSON.stringify(requestData.commentData),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 2:\n            response = _context4.sent;\n            _context4.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", {\n              commentId: data.id\n            });\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _addComment.apply(this, arguments);\n}\n\nexport function getAllComments(_x4) {\n  return _getAllComments.apply(this, arguments);\n}\n\nfunction _getAllComments() {\n  _getAllComments = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(postId) {\n    var response, data, transformedComments, key, commentObj;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch(\"\".concat(FIREBASE_DOMAIN, \"/comments/\").concat(postId, \".json\"));\n\n          case 2:\n            response = _context5.sent;\n            _context5.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context5.sent;\n            transformedComments = [];\n\n            for (key in data) {\n              commentObj = _objectSpread({\n                id: key\n              }, data[key]);\n              transformedComments.push(commentObj);\n            }\n\n            return _context5.abrupt(\"return\", transformedComments);\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getAllComments.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}
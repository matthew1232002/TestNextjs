{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lazarev\\\\WebstormProjects\\\\Test task\\\\components\\\\comments\\\\Comments.tsx\";\nimport { useState, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { StyledComments } from \"./Comments.styled\";\nimport { StyledButton } from \"../../styles/Button\";\nimport { getAllComments } from \"../api/api\";\nimport useHttp from \"../hooks/use-http\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport Layout from \"../layout/Layout\";\n\nconst Comments = () => {\n  const {\n    0: isAddingComment,\n    1: setIsAddingComment\n  } = useState(false);\n  const router = useRouter();\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  const {\n    postId\n  } = router.query;\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(postId);\n  }, [sendRequest, postId]);\n  let comments;\n\n  if (status === 'completed' && (loadedComments || loadedComments.lenght > 0)) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.lenght === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(StyledComments, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(StyledButton, {\n        onClick: startAddCommentHandler,\n        children: \"Add a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n        postId: router.query.postId,\n        onAddedComment: addedCommentHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }, this), comments]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/Lazarev/WebstormProjects/Test task/components/comments/Comments.tsx"],"names":["useState","useCallback","useRouter","StyledComments","StyledButton","getAllComments","useHttp","CommentsList","NewCommentForm","Layout","Comments","isAddingComment","setIsAddingComment","router","sendRequest","status","data","loadedComments","postId","query","startAddCommentHandler","addedCommentHandler","comments","lenght"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,SAAQC,YAAR,QAA2B,qBAA3B;AACA,SAAQC,cAAR,QAA6B,YAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCZ,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMa,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAM;AAACY,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC;AAA5B,MAA8CX,OAAO,CAACD,cAAD,CAA3D;AACA,QAAM;AAACa,IAAAA;AAAD,MAAWL,MAAM,CAACM,KAAxB;;AAEA,QAAMC,sBAAsB,GAAG,MAAM;AACjCR,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GAFD;;AAIA,QAAMS,mBAAmB,GAAGpB,WAAW,CAAC,MAAM;AAC1Ca,IAAAA,WAAW,CAACI,MAAD,CAAX;AACH,GAFsC,EAEpC,CAACJ,WAAD,EAAcI,MAAd,CAFoC,CAAvC;AAIA,MAAII,QAAJ;;AAEA,MAAIP,MAAM,KAAK,WAAX,KAA2BE,cAAc,IAAIA,cAAc,CAACM,MAAf,GAAwB,CAArE,CAAJ,EAA6E;AACzED,IAAAA,QAAQ,gBAAG,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEL;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAX;AACH;;AAED,MAAIF,MAAM,KAAK,WAAX,KAA2B,CAACE,cAAD,IAAmBA,cAAc,CAACM,MAAf,KAA0B,CAAxE,CAAJ,EAAgF;AAC5ED,IAAAA,QAAQ,gBAAG;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACH;;AAED,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,cAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,CAACX,eAAD,iBACG,QAAC,YAAD;AAAc,QAAA,OAAO,EAAES,sBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR,EAOKT,eAAe,iBAAI,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAEE,MAAM,CAACM,KAAP,CAAaD,MAArC;AAA6C,QAAA,cAAc,EAAEG;AAA7D;AAAA;AAAA;AAAA;AAAA,cAPxB,EAQKC,QARL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAtCD;;AAwCA,eAAeZ,QAAf","sourcesContent":["import {useState, useCallback} from \"react\";\r\nimport {useRouter} from \"next/router\";\r\n\r\nimport {StyledComments} from \"./Comments.styled\";\r\nimport {StyledButton} from \"../../styles/Button\";\r\nimport {getAllComments} from \"../api/api\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport CommentsList from \"./CommentsList\";\r\nimport NewCommentForm from \"./NewCommentForm\";\r\nimport Layout from \"../layout/Layout\";\r\n\r\n\r\nconst Comments = () => {\r\n    const [isAddingComment, setIsAddingComment] = useState(false);\r\n    const router = useRouter();\r\n    const {sendRequest, status, data: loadedComments} = useHttp(getAllComments);\r\n    const {postId} = router.query;\r\n\r\n    const startAddCommentHandler = () => {\r\n        setIsAddingComment(true);\r\n    };\r\n\r\n    const addedCommentHandler = useCallback(() => {\r\n        sendRequest(postId);\r\n    }, [sendRequest, postId]);\r\n\r\n    let comments;\r\n\r\n    if (status === 'completed' && (loadedComments || loadedComments.lenght > 0)) {\r\n        comments = <CommentsList comments={loadedComments}/>\r\n    }\r\n\r\n    if (status === 'completed' && (!loadedComments || loadedComments.lenght === 0)) {\r\n        comments = <p className='centered'>No comments were added yet!</p>\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <StyledComments>\r\n                <h2>User Comments</h2>\r\n                {!isAddingComment && (\r\n                    <StyledButton onClick={startAddCommentHandler}>\r\n                        Add a Comment\r\n                    </StyledButton>\r\n                )}\r\n                {isAddingComment && <NewCommentForm postId={router.query.postId} onAddedComment={addedCommentHandler}/>}\r\n                {comments}\r\n            </StyledComments>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}
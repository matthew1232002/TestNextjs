{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lazarev\\\\WebstormProjects\\\\Test task\\\\components\\\\comments\\\\Comments.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { StyledComments } from \"./Comments.styled\";\nimport { getAllComments } from \"../api/api\";\nimport useHttp from \"../hooks/use-http\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nvar Comments = function Comments() {\n  _s();\n\n  var router = useRouter();\n\n  var _useHttp = useHttp(getAllComments),\n      sendRequest = _useHttp.sendRequest,\n      loadedComments = _useHttp.data;\n\n  var postId = router.query.postId;\n  var addedCommentHandler = useCallback(function () {\n    sendRequest(postId);\n  }, [sendRequest, postId]);\n  var comments;\n\n  if (loadedComments) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledComments, {\n    children: [/*#__PURE__*/_jsxDEV(NewCommentForm, {\n      postId: postId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, _this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Comments, \"+nxGLoBMzdwa14BL3rdZgIiWcZ4=\", false, function () {\n  return [useRouter, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/Lazarev/WebstormProjects/Test task/components/comments/Comments.tsx"],"names":["React","useCallback","useRouter","StyledComments","getAllComments","useHttp","CommentsList","NewCommentForm","Comments","router","sendRequest","loadedComments","data","postId","query","addedCommentHandler","comments"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAyBC,WAAzB,QAAsD,OAAtD;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,SAAQC,cAAR,QAA6B,YAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACnB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;;AADmB,iBAEyBG,OAAO,CAACD,cAAD,CAFhC;AAAA,MAEZM,WAFY,YAEZA,WAFY;AAAA,MAEOC,cAFP,YAECC,IAFD;;AAGnB,MAAMC,MAAM,GAAGJ,MAAM,CAACK,KAAP,CAAaD,MAA5B;AAEA,MAAME,mBAAmB,GAAGd,WAAW,CAAC,YAAM;AAC1CS,IAAAA,WAAW,CAACG,MAAD,CAAX;AACH,GAFsC,EAEpC,CAACH,WAAD,EAAcG,MAAd,CAFoC,CAAvC;AAIA,MAAIG,QAAJ;;AAEA,MAAIL,cAAJ,EAAqB;AACjBK,IAAAA,QAAQ,gBAAG,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEL;AAAxB;AAAA;AAAA;AAAA;AAAA,aAAX;AACH;;AAED,sBACI,QAAC,cAAD;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEE,MAAxB;AAAgC,MAAA,cAAc,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGKC,QAHL;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CAvBD;;GAAMR,Q;UACaN,S,EAC6BG,O;;;KAF1CG,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import React, {useState, useCallback, useEffect} from \"react\";\r\nimport {useRouter} from \"next/router\";\r\n\r\nimport {StyledComments} from \"./Comments.styled\";\r\nimport {getAllComments} from \"../api/api\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport CommentsList from \"./CommentsList\";\r\nimport NewCommentForm from \"./NewCommentForm\";\r\n\r\nconst Comments = () => {\r\n    const router = useRouter();\r\n    const {sendRequest, data: loadedComments} = useHttp(getAllComments);\r\n    const postId = router.query.postId;\r\n\r\n    const addedCommentHandler = useCallback(() => {\r\n        sendRequest(postId);\r\n    }, [sendRequest, postId]);\r\n\r\n    let comments;\r\n\r\n    if (loadedComments ) {\r\n        comments = <CommentsList comments={loadedComments}/>\r\n    }\r\n\r\n    return (\r\n        <StyledComments>\r\n            <NewCommentForm postId={postId} onAddedComment={addedCommentHandler}/>\r\n            <h2>User Comments</h2>\r\n            {comments}\r\n        </StyledComments>\r\n\r\n    );\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"C:/Users/Lazarev/WebstormProjects/Test task/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lazarev\\\\WebstormProjects\\\\Test task\\\\components\\\\comments\\\\Comments.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 3rem auto;\\n  text-align: center;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { StyledComments } from \"./Comments.styled\";\nimport { getAllComments } from \"../api/api\";\nimport useHttp from \"../hooks/use-http\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport styled from \"styled-components\";\nvar StyledNoComments = styled.p(_templateObject());\n_c = StyledNoComments;\n\nvar Comments = function Comments() {\n  _s();\n\n  // const [isAddingComment, setIsAddingComment] = useState(false);\n  var router = useRouter();\n\n  var _useHttp = useHttp(getAllComments),\n      sendRequest = _useHttp.sendRequest,\n      loadedComments = _useHttp.data;\n\n  var postId = router.query.postId; // const startAddCommentHandler = () => {\n  //     setIsAddingComment(true);\n  // };\n\n  var addedCommentHandler = useCallback(function () {\n    sendRequest(postId);\n  }, [sendRequest, postId]);\n  var comments;\n\n  if (loadedComments) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, _this);\n  }\n\n  if (!loadedComments || loadedComments.lenght === 0) {\n    comments = /*#__PURE__*/_jsxDEV(StyledNoComments, {\n      children: \"No comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledComments, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      postId: postId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, _this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Comments, \"+nxGLoBMzdwa14BL3rdZgIiWcZ4=\", false, function () {\n  return [useRouter, useHttp];\n});\n\n_c2 = Comments;\nexport default Comments;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledNoComments\");\n$RefreshReg$(_c2, \"Comments\");","map":{"version":3,"sources":["C:/Users/Lazarev/WebstormProjects/Test task/components/comments/Comments.tsx"],"names":["React","useCallback","useRouter","StyledComments","getAllComments","useHttp","CommentsList","NewCommentForm","styled","StyledNoComments","p","Comments","router","sendRequest","loadedComments","data","postId","query","addedCommentHandler","comments","lenght"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAyBC,WAAzB,QAAsD,OAAtD;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,SAAQC,cAAR,QAA6B,mBAA7B;AAEA,SAAQC,cAAR,QAA6B,YAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,gBAAgB,GAAGD,MAAM,CAACE,CAAV,mBAAtB;KAAMD,gB;;AAQN,IAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACnB;AACA,MAAMC,MAAM,GAAGV,SAAS,EAAxB;;AAFmB,iBAGyBG,OAAO,CAACD,cAAD,CAHhC;AAAA,MAGZS,WAHY,YAGZA,WAHY;AAAA,MAGOC,cAHP,YAGCC,IAHD;;AAInB,MAAMC,MAAM,GAAGJ,MAAM,CAACK,KAAP,CAAaD,MAA5B,CAJmB,CAMnB;AACA;AACA;;AAEA,MAAME,mBAAmB,GAAGjB,WAAW,CAAC,YAAM;AAC1CY,IAAAA,WAAW,CAACG,MAAD,CAAX;AACH,GAFsC,EAEpC,CAACH,WAAD,EAAcG,MAAd,CAFoC,CAAvC;AAIA,MAAIG,QAAJ;;AAEA,MAAIL,cAAJ,EAAqB;AACjBK,IAAAA,QAAQ,gBAAG,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEL;AAAxB;AAAA;AAAA;AAAA;AAAA,aAAX;AACH;;AAED,MAAI,CAACA,cAAD,IAAmBA,cAAc,CAACM,MAAf,KAA0B,CAAjD,EAAoD;AAChDD,IAAAA,QAAQ,gBAAG,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAX;AACH;;AACD,sBACI,QAAC,cAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAOI,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEH,MAAxB;AAAgC,MAAA,cAAc,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,aAPJ,EAQKC,QARL;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAaH,CApCD;;GAAMR,Q;UAEaT,S,EAC6BG,O;;;MAH1CM,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React, {useState, useCallback, useEffect} from \"react\";\r\nimport {useRouter} from \"next/router\";\r\n\r\nimport {StyledComments} from \"./Comments.styled\";\r\nimport {StyledButton} from \"../../styles/Button\";\r\nimport {getAllComments} from \"../api/api\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport CommentsList from \"./CommentsList\";\r\nimport NewCommentForm from \"./NewCommentForm\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledNoComments = styled.p`\r\n  margin: 3rem auto;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Comments = () => {\r\n    // const [isAddingComment, setIsAddingComment] = useState(false);\r\n    const router = useRouter();\r\n    const {sendRequest, data: loadedComments} = useHttp(getAllComments);\r\n    const postId = router.query.postId;\r\n\r\n    // const startAddCommentHandler = () => {\r\n    //     setIsAddingComment(true);\r\n    // };\r\n\r\n    const addedCommentHandler = useCallback(() => {\r\n        sendRequest(postId);\r\n    }, [sendRequest, postId]);\r\n\r\n    let comments;\r\n\r\n    if (loadedComments ) {\r\n        comments = <CommentsList comments={loadedComments}/>\r\n    }\r\n\r\n    if (!loadedComments || loadedComments.lenght === 0) {\r\n        comments = <StyledNoComments>No comments were added yet!</StyledNoComments>\r\n    }\r\n    return (\r\n        <StyledComments>\r\n            <h2>User Comments</h2>\r\n            {/*{!isAddingComment && (*/}\r\n            {/*    <StyledButton onClick={startAddCommentHandler}>*/}\r\n            {/*        Add a Comment*/}\r\n            {/*    </StyledButton>*/}\r\n            {/*)}*/}\r\n            <NewCommentForm postId={postId} onAddedComment={addedCommentHandler}/>\r\n            {comments}\r\n        </StyledComments>\r\n\r\n    );\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lazarev\\\\WebstormProjects\\\\Test task\\\\components\\\\comments\\\\Comments.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { StyledComments } from \"./Comments.styled\";\nimport { StyledButton } from \"../../styles/Button\";\nimport { getAllComments } from \"../api/api\";\nimport useHttp from \"../hooks/use-http\";\n\nvar Comments = function Comments() {\n  _s();\n\n  var _useState = useState(false),\n      isAddingComment = _useState[0],\n      setIsAddingComment = _useState[1];\n\n  var params = useParams();\n\n  var _useHttp = useHttp(getAllComments),\n      sendRequest = _useHttp.sendRequest,\n      status = _useHttp.status,\n      loadedComments = _useHttp.data;\n\n  var postId = params.postId;\n\n  var startAddCommentHandler = function startAddCommentHandler() {\n    setIsAddingComment(true);\n  };\n\n  var addedCommentHandler = useCallback(function () {\n    sendRequest(postId);\n  }, [sendRequest, postId]);\n  return /*#__PURE__*/_jsxDEV(StyledComments, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, _this), !isAddingComment && /*#__PURE__*/_jsxDEV(StyledButton, {\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, _this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.postId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Comments, \"IJoScUV7GrX5MaAhyphn3WEBkLc=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/Lazarev/WebstormProjects/Test task/components/comments/Comments.tsx"],"names":["useState","useCallback","useParams","StyledComments","StyledButton","getAllComments","useHttp","Comments","isAddingComment","setIsAddingComment","params","sendRequest","status","loadedComments","data","postId","startAddCommentHandler","addedCommentHandler"],"mappings":";;;;;;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,SAAQC,YAAR,QAA2B,qBAA3B;AACA,SAAQC,cAAR,QAA6B,YAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,kBAC2BP,QAAQ,CAAC,KAAD,CADnC;AAAA,MACZQ,eADY;AAAA,MACKC,kBADL;;AAEnB,MAAMC,MAAM,GAAGR,SAAS,EAAxB;;AAFmB,iBAGgCI,OAAO,CAACD,cAAD,CAHvC;AAAA,MAGZM,WAHY,YAGZA,WAHY;AAAA,MAGCC,MAHD,YAGCA,MAHD;AAAA,MAGcC,cAHd,YAGSC,IAHT;;AAAA,MAKZC,MALY,GAKFL,MALE,CAKZK,MALY;;AAOnB,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACjCP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GAFD;;AAIA,MAAMQ,mBAAmB,GAAGhB,WAAW,CAAC,YAAK;AACzCU,IAAAA,WAAW,CAACI,MAAD,CAAX;AACH,GAFsC,EAEpC,CAACJ,WAAD,EAAcI,MAAd,CAFoC,CAAvC;AAIA,sBACI,QAAC,cAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEK,CAACP,eAAD,iBACG,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEQ,sBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHR,EAOKR,eAAe,iBAAI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEE,MAAM,CAACK,MAAhC;AAAwC,MAAA,cAAc,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA,aAPxB;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAYH,CA3BD;;GAAMV,Q;UAEaL,S,EACoCI,O;;;KAHjDC,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import {useState, useCallback} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport {StyledComments} from \"./Comments.styled\";\r\nimport {StyledButton} from \"../../styles/Button\";\r\nimport {getAllComments} from \"../api/api\";\r\nimport useHttp from \"../hooks/use-http\";\r\n\r\nconst Comments = () => {\r\n    const [isAddingComment, setIsAddingComment] = useState(false);\r\n    const params = useParams();\r\n    const {sendRequest, status, data:loadedComments} = useHttp(getAllComments);\r\n\r\n    const {postId} = params;\r\n\r\n    const startAddCommentHandler = () => {\r\n        setIsAddingComment(true);\r\n    };\r\n\r\n    const addedCommentHandler = useCallback(()=> {\r\n        sendRequest(postId);\r\n    }, [sendRequest, postId]);\r\n\r\n    return (\r\n        <StyledComments >\r\n            <h2>User Comments</h2>\r\n            {!isAddingComment && (\r\n                <StyledButton onClick={startAddCommentHandler}>\r\n                    Add a Comment\r\n                </StyledButton>\r\n            )}\r\n            {isAddingComment && <NewCommentForm quoteId={params.postId} onAddedComment={addedCommentHandler}/>}\r\n\r\n        </StyledComments>\r\n    );\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}
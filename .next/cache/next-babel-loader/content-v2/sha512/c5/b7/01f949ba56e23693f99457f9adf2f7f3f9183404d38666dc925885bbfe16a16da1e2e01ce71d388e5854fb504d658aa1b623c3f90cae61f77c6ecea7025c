{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lazarev\\\\WebstormProjects\\\\Test task\\\\components\\\\posts\\\\PostForm.tsx\";\nimport { Fragment, useRef } from 'react';\nimport Card from \"../layout/Card\";\nimport { StyledButton } from \"../../styles/Button\";\nimport { StyledPostForm, StyledPostFormActions, StyledPostFormArea, StyledPostFormInputs, StyledPostFormValues } from \"./PostForm.styled\";\nimport styled from \"styled-components\";\nconst StyledInput = styled.input(StyledPostFormInputs);\nconst StyledTextArea = styled.textarea(StyledPostFormInputs);\nconst basedButton = styled.button(StyledButton);\nconst StyledButtonPostForm = styled.button`\n  ${basedButton}\n  \n`;\n\nconst PostForm = props => {\n  const authorInputRef = useRef(null);\n  const textInputRef = useRef(null);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value; // optional: Could validate here\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredText\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(StyledPostForm, {\n        onSubmit: submitFormHandler,\n        children: [/*#__PURE__*/_jsxDEV(StyledPostFormValues, {\n          children: [/*#__PURE__*/_jsxDEV(StyledPostFormArea, {\n            htmlFor: \"author\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n            type: \"text\",\n            id: \"author\",\n            ref: authorInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledPostFormValues, {\n          children: [/*#__PURE__*/_jsxDEV(StyledPostFormArea, {\n            htmlFor: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledTextArea, {\n            id: \"text\",\n            ref: textInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledPostFormActions, {\n          children: /*#__PURE__*/_jsxDEV(StyledButtonPostForm, {\n            children: \"Add Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/Lazarev/WebstormProjects/Test task/components/posts/PostForm.tsx"],"names":["Fragment","useRef","Card","StyledButton","StyledPostForm","StyledPostFormActions","StyledPostFormArea","StyledPostFormInputs","StyledPostFormValues","styled","StyledInput","input","StyledTextArea","textarea","basedButton","button","StyledButtonPostForm","PostForm","props","authorInputRef","textInputRef","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,MAAlB,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAAQC,YAAR,QAA2B,qBAA3B;AACA,SACIC,cADJ,EAEIC,qBAFJ,EAGIC,kBAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,QAMO,mBANP;AAOA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,KAAP,CAAaJ,oBAAb,CAApB;AACA,MAAMK,cAAc,GAAGH,MAAM,CAACI,QAAP,CAAgBN,oBAAhB,CAAvB;AACA,MAAMO,WAAW,GAAGL,MAAM,CAACM,MAAP,CAAcZ,YAAd,CAApB;AACA,MAAMa,oBAAoB,GAAIP,MAAM,CAACM,MAAO;AAC5C,IAAID,WAAY;AAChB;AACA,CAHA;;AAKA,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAMC,cAAc,GAAGlB,MAAM,CAAmB,IAAnB,CAA7B;AACA,QAAMmB,YAAY,GAAGnB,MAAM,CAAsB,IAAtB,CAA3B;;AAEA,WAASoB,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGL,cAAc,CAACM,OAAf,CAAwBC,KAA9C;AACA,UAAMC,WAAW,GAAGP,YAAY,CAACK,OAAb,CAAsBC,KAA1C,CAJ8B,CAM9B;;AAEAR,IAAAA,KAAK,CAACU,UAAN,CAAiB;AAACC,MAAAA,MAAM,EAAEL,aAAT;AAAwBM,MAAAA,IAAI,EAAEH;AAA9B,KAAjB;AACH;;AAED,sBACI,QAAC,QAAD;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEN,iBAA1B;AAAA,gCACI,QAAC,oBAAD;AAAA,kCACI,QAAC,kBAAD;AAAoB,YAAA,OAAO,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,WAAD;AAAa,YAAA,IAAI,EAAC,MAAlB;AAAyB,YAAA,EAAE,EAAC,QAA5B;AAAqC,YAAA,GAAG,EAAEF;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,oBAAD;AAAA,kCACI,QAAC,kBAAD;AAAoB,YAAA,OAAO,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,cAAD;AAAgB,YAAA,EAAE,EAAC,MAAnB;AAA2B,YAAA,GAAG,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI,QAAC,qBAAD;AAAA,iCACI,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAlCD;;AAoCA,eAAeH,QAAf","sourcesContent":["import {Fragment, useRef} from 'react';\r\nimport Card from \"../layout/Card\";\r\nimport {StyledButton} from \"../../styles/Button\";\r\nimport {\r\n    StyledPostForm,\r\n    StyledPostFormActions,\r\n    StyledPostFormArea,\r\n    StyledPostFormInputs,\r\n    StyledPostFormValues\r\n} from \"./PostForm.styled\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input(StyledPostFormInputs);\r\nconst StyledTextArea = styled.textarea(StyledPostFormInputs);\r\nconst basedButton = styled.button(StyledButton);\r\nconst StyledButtonPostForm  = styled.button`\r\n  ${basedButton}\r\n  \r\n`\r\n\r\nconst PostForm = (props) => {\r\n    const authorInputRef = useRef<HTMLInputElement>(null);\r\n    const textInputRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n    function submitFormHandler(event) {\r\n        event.preventDefault();\r\n\r\n        const enteredAuthor = authorInputRef.current!.value;\r\n        const enteredText = textInputRef.current!.value;\r\n\r\n        // optional: Could validate here\r\n\r\n        props.onAddQuote({author: enteredAuthor, text: enteredText});\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Card>\r\n                <StyledPostForm onSubmit={submitFormHandler}>\r\n                    <StyledPostFormValues>\r\n                        <StyledPostFormArea htmlFor='author'>Author</StyledPostFormArea>\r\n                        <StyledInput type='text' id='author' ref={authorInputRef}/>\r\n                    </StyledPostFormValues>\r\n                    <StyledPostFormValues >\r\n                        <StyledPostFormArea htmlFor='text'>Text</StyledPostFormArea>\r\n                        <StyledTextArea id='text'  ref={textInputRef} />\r\n                    </StyledPostFormValues>\r\n                    <StyledPostFormActions>\r\n                        <StyledButtonPostForm>Add Quote</StyledButtonPostForm>\r\n                    </StyledPostFormActions>\r\n                </StyledPostForm>\r\n            </Card>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}
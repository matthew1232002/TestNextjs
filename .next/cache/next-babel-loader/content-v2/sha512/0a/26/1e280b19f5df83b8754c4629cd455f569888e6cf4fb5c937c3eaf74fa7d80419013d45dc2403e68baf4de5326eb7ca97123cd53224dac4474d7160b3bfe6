{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lazarev\\\\WebstormProjects\\\\Test task\\\\components\\\\comments\\\\Comments.tsx\";\nimport React, { useState, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { StyledComments } from \"./Comments.styled\";\nimport { StyledButton } from \"../../styles/Button\";\nimport { getAllComments } from \"../api/api\";\nimport useHttp from \"../hooks/use-http\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport styled from \"styled-components\";\nconst StyledNoComments = styled.p`\n  margin: 3rem auto;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Comments = () => {\n  const {\n    0: isAddingComment,\n    1: setIsAddingComment\n  } = useState(false);\n  const router = useRouter();\n  const {\n    sendRequest,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  const postId = router.query.postId;\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(postId);\n  }, [sendRequest, postId]);\n  let comments;\n\n  if (loadedComments || loadedComments.lenght > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this);\n  }\n\n  if (!loadedComments || loadedComments.lenght === 0) {\n    comments = /*#__PURE__*/_jsxDEV(StyledNoComments, {\n      children: \"No comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledComments, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(StyledButton, {\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      postId: postId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/Lazarev/WebstormProjects/Test task/components/comments/Comments.tsx"],"names":["React","useState","useCallback","useRouter","StyledComments","StyledButton","getAllComments","useHttp","CommentsList","NewCommentForm","styled","StyledNoComments","p","Comments","isAddingComment","setIsAddingComment","router","sendRequest","data","loadedComments","postId","query","startAddCommentHandler","addedCommentHandler","comments","lenght"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAAsD,OAAtD;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,SAAQC,YAAR,QAA2B,qBAA3B;AACA,SAAQC,cAAR,QAA6B,YAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,CAAE;AAClC;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCd,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMe,MAAM,GAAGb,SAAS,EAAxB;AACA,QAAM;AAACc,IAAAA,WAAD;AAAcC,IAAAA,IAAI,EAAEC;AAApB,MAAsCZ,OAAO,CAACD,cAAD,CAAnD;AACA,QAAMc,MAAM,GAAGJ,MAAM,CAACK,KAAP,CAAaD,MAA5B;;AAEA,QAAME,sBAAsB,GAAG,MAAM;AACjCP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GAFD;;AAIA,QAAMQ,mBAAmB,GAAGrB,WAAW,CAAC,MAAM;AAC1Ce,IAAAA,WAAW,CAACG,MAAD,CAAX;AACH,GAFsC,EAEpC,CAACH,WAAD,EAAcG,MAAd,CAFoC,CAAvC;AAIA,MAAII,QAAJ;;AAEA,MAAIL,cAAc,IAAIA,cAAc,CAACM,MAAf,GAAwB,CAA9C,EAAiD;AAC7CD,IAAAA,QAAQ,gBAAG,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEL;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAX;AACH;;AAED,MAAI,CAACA,cAAD,IAAmBA,cAAc,CAACM,MAAf,KAA0B,CAAjD,EAAoD;AAChDD,IAAAA,QAAQ,gBAAG,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACH;;AACD,sBACI,QAAC,cAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,CAACV,eAAD,iBACG,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEQ,sBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR,EAOKR,eAAe,iBAAI,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEM,MAAxB;AAAgC,MAAA,cAAc,EAAEG;AAAhD;AAAA;AAAA;AAAA;AAAA,YAPxB,EAQKC,QARL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CApCD;;AAsCA,eAAeX,QAAf","sourcesContent":["import React, {useState, useCallback, useEffect} from \"react\";\r\nimport {useRouter} from \"next/router\";\r\n\r\nimport {StyledComments} from \"./Comments.styled\";\r\nimport {StyledButton} from \"../../styles/Button\";\r\nimport {getAllComments} from \"../api/api\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport CommentsList from \"./CommentsList\";\r\nimport NewCommentForm from \"./NewCommentForm\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledNoComments = styled.p`\r\n  margin: 3rem auto;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Comments = () => {\r\n    const [isAddingComment, setIsAddingComment] = useState(false);\r\n    const router = useRouter();\r\n    const {sendRequest, data: loadedComments} = useHttp(getAllComments);\r\n    const postId = router.query.postId;\r\n\r\n    const startAddCommentHandler = () => {\r\n        setIsAddingComment(true);\r\n    };\r\n\r\n    const addedCommentHandler = useCallback(() => {\r\n        sendRequest(postId);\r\n    }, [sendRequest, postId]);\r\n\r\n    let comments;\r\n\r\n    if (loadedComments || loadedComments.lenght > 0) {\r\n        comments = <CommentsList comments={loadedComments}/>\r\n    }\r\n\r\n    if (!loadedComments || loadedComments.lenght === 0) {\r\n        comments = <StyledNoComments>No comments were added yet!</StyledNoComments>\r\n    }\r\n    return (\r\n        <StyledComments>\r\n            <h2>User Comments</h2>\r\n            {!isAddingComment && (\r\n                <StyledButton onClick={startAddCommentHandler}>\r\n                    Add a Comment\r\n                </StyledButton>\r\n            )}\r\n            {isAddingComment && <NewCommentForm postId={postId} onAddedComment={addedCommentHandler}/>}\r\n            {comments}\r\n        </StyledComments>\r\n\r\n    );\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}
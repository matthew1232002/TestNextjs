{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useRef } from \"react\";\nimport { StyledNewCommentArea, StyledNewCommentControl, StyledNewCommentForm, StyledNewCommentInput } from \"./NewCommentForm.styled\";\nimport useHttp from \"../hooks/use-http\";\nimport { addComment } from \"../api/api\";\nimport { StyledButton } from \"../../styles/Button\";\n\nconst NewCommentForm = props => {\n  const commentTextRef = useRef(null);\n  const {\n    sendRequest,\n    status\n  } = useHttp(addComment);\n  const {\n    onAddedComment\n  } = props;\n  useEffect(() => {\n    onAddedComment();\n  }, [onAddedComment, status]);\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    sendRequest({\n      commentData: {\n        text: enteredText\n      },\n      postId: props.postId\n    }); // optional: Could validate here\n    // send comment to server\n  };\n\n  return /*#__PURE__*/_jsxs(StyledNewCommentForm, {\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxs(StyledNewCommentControl, {\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsx(StyledNewCommentArea, {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }), /*#__PURE__*/_jsx(StyledNewCommentInput, {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(StyledButton, {\n        children: \"Add Comment\"\n      })\n    })]\n  });\n};\n\nexport default NewCommentForm;","map":null,"metadata":{},"sourceType":"module"}
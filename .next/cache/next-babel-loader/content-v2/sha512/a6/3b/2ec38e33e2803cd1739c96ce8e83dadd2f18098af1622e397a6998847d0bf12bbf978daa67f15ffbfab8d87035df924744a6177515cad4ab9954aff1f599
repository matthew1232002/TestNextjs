{"ast":null,"code":"import _defineProperty from \"C:/Users/Lazarev/WebstormProjects/Test task/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:/Users/Lazarev/WebstormProjects/Test task/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Lazarev/WebstormProjects/Test task/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useReducer, useCallback } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending'\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed'\n    };\n  } // if (action.type === 'ERROR') {\n  //     return {\n  //         data: null,\n  //         error: action.errorMessage,\n  //         status: 'completed',\n  //     };\n  // }\n\n\n  return state;\n}\n\nfunction useHttp(requestFunction) {\n  var startWithPending = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var _useReducer = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null\n  }),\n      httpState = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var sendRequest = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(requestData) {\n      var responseData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: 'SEND'\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return requestFunction(requestData);\n\n            case 4:\n              responseData = _context.sent;\n              dispatch({\n                type: 'SUCCESS',\n                responseData: responseData\n              });\n              _context.next = 10;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [requestFunction]);\n  return _objectSpread({\n    sendRequest: sendRequest\n  }, httpState);\n}\n\nexport default useHttp;","map":null,"metadata":{},"sourceType":"module"}
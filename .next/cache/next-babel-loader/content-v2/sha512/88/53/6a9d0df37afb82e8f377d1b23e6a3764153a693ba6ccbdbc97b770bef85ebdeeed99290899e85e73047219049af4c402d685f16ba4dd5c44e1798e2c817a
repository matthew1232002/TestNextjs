{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lazarev\\\\WebstormProjects\\\\Test task\\\\components\\\\comments\\\\Comments.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { StyledComments } from \"./Comments.styled\";\nimport { StyledButton } from \"../../styles/Button\";\nimport { getAllComments } from \"../api/api\";\nimport useHttp from \"../hooks/use-http\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nvar Comments = function Comments() {\n  _s();\n\n  var _useState = useState(false),\n      isAddingComment = _useState[0],\n      setIsAddingComment = _useState[1];\n\n  var router = useRouter();\n\n  var _useHttp = useHttp(getAllComments),\n      sendRequest = _useHttp.sendRequest,\n      status = _useHttp.status,\n      loadedComments = _useHttp.data;\n\n  var postId = router.query.postId;\n  useEffect(function () {\n    sendRequest(postId);\n  }, [postId, sendRequest]);\n\n  var startAddCommentHandler = function startAddCommentHandler() {\n    setIsAddingComment(true);\n  };\n\n  var comments;\n\n  if (status === 'completed' && (loadedComments || loadedComments.lenght > 0)) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }, _this);\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.lenght === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }, _this);\n  }\n\n  console.log('Running');\n  return /*#__PURE__*/_jsxDEV(StyledComments, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, _this), !isAddingComment && /*#__PURE__*/_jsxDEV(StyledButton, {\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, _this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      postId: postId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }, _this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Comments, \"eK80Srp2ff65mXMK4zEuYNo0/LE=\", false, function () {\n  return [useRouter, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/Lazarev/WebstormProjects/Test task/components/comments/Comments.tsx"],"names":["React","useState","useEffect","useRouter","StyledComments","StyledButton","getAllComments","useHttp","CommentsList","NewCommentForm","Comments","isAddingComment","setIsAddingComment","router","sendRequest","status","loadedComments","data","postId","query","startAddCommentHandler","comments","lenght","console","log","addedCommentHandler"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,SAAQC,YAAR,QAA2B,qBAA3B;AACA,SAAQC,cAAR,QAA6B,YAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,kBAC2BT,QAAQ,CAAC,KAAD,CADnC;AAAA,MACZU,eADY;AAAA,MACKC,kBADL;;AAEnB,MAAMC,MAAM,GAAGV,SAAS,EAAxB;;AAFmB,iBAGiCI,OAAO,CAACD,cAAD,CAHxC;AAAA,MAGZQ,WAHY,YAGZA,WAHY;AAAA,MAGCC,MAHD,YAGCA,MAHD;AAAA,MAGeC,cAHf,YAGSC,IAHT;;AAInB,MAAMC,MAAM,GAAGL,MAAM,CAACM,KAAP,CAAaD,MAA5B;AAEAhB,EAAAA,SAAS,CAAE,YAAM;AACbY,IAAAA,WAAW,CAACI,MAAD,CAAX;AACH,GAFQ,EAEN,CAACA,MAAD,EAASJ,WAAT,CAFM,CAAT;;AAIA,MAAMM,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACjCR,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GAFD;;AAMA,MAAIS,QAAJ;;AAEA,MAAIN,MAAM,KAAK,WAAX,KAA2BC,cAAc,IAAIA,cAAc,CAACM,MAAf,GAAwB,CAArE,CAAJ,EAA6E;AACzED,IAAAA,QAAQ,gBAAG,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEL;AAAxB;AAAA;AAAA;AAAA;AAAA,aAAX;AACH;;AAED,MAAID,MAAM,KAAK,WAAX,KAA2B,CAACC,cAAD,IAAmBA,cAAc,CAACM,MAAf,KAA0B,CAAxE,CAAJ,EAAgF;AAC5ED,IAAAA,QAAQ,gBAAG;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAX;AACH;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,sBAEI,QAAC,cAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEK,CAACb,eAAD,iBACG,QAAC,YAAD;AAAc,MAAA,OAAO,EAAES,sBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHR,EAOKT,eAAe,iBAAI,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEO,MAAxB;AAAgC,MAAA,cAAc,EAAEO;AAAhD;AAAA;AAAA;AAAA;AAAA,aAPxB,EAQKJ,QARL;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ;AAcH,CAxCD;;GAAMX,Q;UAEaP,S,EACqCI,O;;;KAHlDG,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React, {useState, useCallback, useEffect} from \"react\";\r\nimport {useRouter} from \"next/router\";\r\n\r\nimport {StyledComments} from \"./Comments.styled\";\r\nimport {StyledButton} from \"../../styles/Button\";\r\nimport {getAllComments} from \"../api/api\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport CommentsList from \"./CommentsList\";\r\nimport NewCommentForm from \"./NewCommentForm\";\r\n\r\n\r\nconst Comments = () => {\r\n    const [isAddingComment, setIsAddingComment] = useState(false);\r\n    const router = useRouter();\r\n    const {sendRequest, status, data: loadedComments} = useHttp(getAllComments);\r\n    const postId = router.query.postId;\r\n\r\n    useEffect( () => {\r\n        sendRequest(postId);\r\n    }, [postId, sendRequest]);\r\n\r\n    const startAddCommentHandler = () => {\r\n        setIsAddingComment(true);\r\n    };\r\n\r\n\r\n\r\n    let comments;\r\n\r\n    if (status === 'completed' && (loadedComments || loadedComments.lenght > 0)) {\r\n        comments = <CommentsList comments={loadedComments}/>\r\n    }\r\n\r\n    if (status === 'completed' && (!loadedComments || loadedComments.lenght === 0)) {\r\n        comments = <p className='centered'>No comments were added yet!</p>\r\n    }\r\n    console.log('Running')\r\n    return (\r\n\r\n        <StyledComments>\r\n            <h2>User Comments</h2>\r\n            {!isAddingComment && (\r\n                <StyledButton onClick={startAddCommentHandler}>\r\n                    Add a Comment\r\n                </StyledButton>\r\n            )}\r\n            {isAddingComment && <NewCommentForm postId={postId} onAddedComment={addedCommentHandler}/>}\r\n            {comments}\r\n        </StyledComments>\r\n\r\n    );\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}
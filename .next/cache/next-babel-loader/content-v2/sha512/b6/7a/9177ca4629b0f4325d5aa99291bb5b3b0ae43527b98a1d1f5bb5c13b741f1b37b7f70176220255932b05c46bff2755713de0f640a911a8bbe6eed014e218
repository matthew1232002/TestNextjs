{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lazarev\\\\WebstormProjects\\\\Test task\\\\components\\\\comments\\\\NewCommentForm.tsx\";\nimport React, { useEffect, useRef } from \"react\";\nimport { StyledNewCommentArea, StyledNewCommentControl, StyledNewCommentForm, StyledNewCommentInput } from \"./NewCommentForm.styled\";\nimport useHttp from \"../hooks/use-http\";\nimport { addComment } from \"../api/api\";\nimport { StyledButton } from \"../../styles/Button\";\nimport { useRouter } from \"next/router\";\n\nconst NewCommentForm = props => {\n  const router = useRouter();\n  const commentTextRef = useRef(null);\n  const {\n    sendRequest,\n    status,\n    data\n  } = useHttp(addComment);\n  const {\n    onAddedComment\n  } = props;\n  useEffect(() => {\n    onAddedComment();\n\n    if (status === 'completed') {}\n  }, [onAddedComment, status, router, data]);\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    sendRequest({\n      commentData: {\n        text: enteredText\n      },\n      postId: props.postId\n    }); // optional: Could validate here\n    // send comment to server\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledNewCommentForm, {\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(StyledNewCommentControl, {\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(StyledNewCommentArea, {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledNewCommentInput, {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(StyledButton, {\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\nexport default NewCommentForm;","map":{"version":3,"sources":["C:/Users/Lazarev/WebstormProjects/Test task/components/comments/NewCommentForm.tsx"],"names":["React","useEffect","useRef","StyledNewCommentArea","StyledNewCommentControl","StyledNewCommentForm","StyledNewCommentInput","useHttp","addComment","StyledButton","useRouter","NewCommentForm","props","router","commentTextRef","sendRequest","status","data","onAddedComment","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","postId"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AAEA,SACIC,oBADJ,EAEIC,uBAFJ,EAGIC,oBAHJ,EAIIC,qBAJJ,QAKO,yBALP;AAMA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AACA,SAAQC,YAAR,QAA2B,qBAA3B;AACA,SAAQC,SAAR,QAAwB,aAAxB;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,cAAc,GAAGZ,MAAM,CAAsB,IAAtB,CAA7B;AAEA,QAAM;AAACa,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA;AAAtB,MAA8BV,OAAO,CAACC,UAAD,CAA3C;AAEA,QAAM;AAACU,IAAAA;AAAD,MAAmBN,KAAzB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,cAAc;;AACd,QAAIF,MAAM,KAAK,WAAf,EAA4B,CAE3B;AAEJ,GANQ,EAMN,CAACE,cAAD,EAAiBF,MAAjB,EAAyBH,MAAzB,EAAiCI,IAAjC,CANM,CAAT;;AASA,QAAME,iBAAiB,GAAIC,KAAD,IAA4B;AAClDA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,WAAW,GAAGR,cAAc,CAACS,OAAf,CAAwBC,KAA5C;AAEAT,IAAAA,WAAW,CAAC;AAACU,MAAAA,WAAW,EAAE;AAACC,QAAAA,IAAI,EAAEJ;AAAP,OAAd;AAAmCK,MAAAA,MAAM,EAACf,KAAK,CAACe;AAAhD,KAAD,CAAX,CALkD,CAOlD;AAEA;AACH,GAVD;;AAYA,sBACI,QAAC,oBAAD;AAAsB,IAAA,QAAQ,EAAER,iBAAhC;AAAA,4BACI,QAAC,uBAAD;AAAyB,MAAA,QAAQ,EAAEA,iBAAnC;AAAA,8BACI,QAAC,oBAAD;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,qBAAD;AAAuB,QAAA,EAAE,EAAC,SAA1B;AAAoC,QAAA,IAAI,EAAC,GAAzC;AAA6C,QAAA,GAAG,EAAEL;AAAlD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,6BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAxCD;;AA0CA,eAAeH,cAAf","sourcesContent":["import React, {useEffect, useRef} from \"react\";\r\n\r\nimport {\r\n    StyledNewCommentArea,\r\n    StyledNewCommentControl,\r\n    StyledNewCommentForm,\r\n    StyledNewCommentInput\r\n} from \"./NewCommentForm.styled\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport {addComment} from \"../api/api\";\r\nimport {StyledButton} from \"../../styles/Button\";\r\nimport {useRouter} from \"next/router\";\r\n\r\n\r\nconst NewCommentForm = (props) => {\r\n    const router = useRouter();\r\n    const commentTextRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n    const {sendRequest, status, data} = useHttp(addComment);\r\n\r\n    const {onAddedComment} = props;\r\n\r\n    useEffect(() => {\r\n        onAddedComment();\r\n        if (status === 'completed') {\r\n\r\n        }\r\n\r\n    }, [onAddedComment, status, router, data]);\r\n\r\n\r\n    const submitFormHandler = (event: React.FormEvent) => {\r\n        event.preventDefault();\r\n\r\n        const enteredText = commentTextRef.current!.value;\r\n\r\n        sendRequest({commentData: {text: enteredText}, postId:props.postId});\r\n\r\n        // optional: Could validate here\r\n\r\n        // send comment to server\r\n    };\r\n\r\n    return (\r\n        <StyledNewCommentForm onSubmit={submitFormHandler}>\r\n            <StyledNewCommentControl onSubmit={submitFormHandler}>\r\n                <StyledNewCommentArea htmlFor='comment'>Your Comment</StyledNewCommentArea>\r\n                <StyledNewCommentInput id='comment' rows='5' ref={commentTextRef}/>\r\n            </StyledNewCommentControl>\r\n            <div>\r\n                <StyledButton>Add Comment</StyledButton>\r\n            </div>\r\n        </StyledNewCommentForm>\r\n    );\r\n}\r\n\r\nexport default NewCommentForm;"]},"metadata":{},"sourceType":"module"}